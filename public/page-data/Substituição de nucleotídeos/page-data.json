{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Substituição de nucleotídeos","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h4\", {\n    \"id\": \"substituição-de-nucleotídeos\"\n  }, \"Substitui\\xE7\\xE3o de nucleot\\xEDdeos\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Revisao-de-acidos-nucleicosSNP-Single-nucleotide-polymorphismorSNP\",\n    \"title\": \"Revisão de ácidos nucleicos#SNP Single nucleotide polymorphism|SNP\"\n  }, \"[[Revis\\xE3o de \\xE1cidos nucleicos#SNP Single nucleotide polymorphism|SNP]]\"), \"\")), mdx(\"h5\", {\n    \"id\": \"transição\"\n  }, \"Transi\\xE7\\xE3o\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quando a muta\\xE7\\xE3o altera uma base nitrogenada por outro do mesmo grupo (Citosina por timina ou Adenina por Timina)\", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-953851\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-953851\",\n    \"className\": \"footnote-ref\"\n  }, \"953851\")))), mdx(\"h5\", {\n    \"id\": \"transversão\"\n  }, \"Transvers\\xE3o\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quando a muta\\xE7\\xE3o altera uma base nitrogenada de um grupo por outra de grupo diferente\", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-236228\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-236228\",\n    \"className\": \"footnote-ref\"\n  }, \"236228\")))), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-953851\"\n  }, \"O que \\xE9 uma muta\\xE7\\xE3o por transi\\xE7\\xE3o?\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-953851\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-236228\"\n  }, \"O que \\xE9 uma muta\\xE7\\xE3o por transvers\\xE3o?\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-236228\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Substituicao-de-nucleotideos\",\n    \"title\": \"Substituição de nucleotídeos\"\n  }, \"[[Substitui\\xE7\\xE3o de nucleot\\xEDdeos]]\"), \"\"), mdx(\"h4\", {\n    \"id\": \"indel-inserçãodeleção-em-relação-à-dna\"\n  }, \"Indel (inser\\xE7\\xE3o/dele\\xE7\\xE3o) (em rela\\xE7\\xE3o \\xE0 DNA)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Surgem nucleot\\xEDdeos que n\\xE3o haviam na sequ\\xEAncia original ou perder nuclot\\xEDdeos que existiam nela\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pode ser de um ou muitos nucleot\\xEDdeos \", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-644606\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-644606\",\n    \"className\": \"footnote-ref\"\n  }, \"644606\")))), mdx(\"h5\", {\n    \"id\": \"inserção\"\n  }, \"Inser\\xE7\\xE3o\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quando surgem nucleot\\xEDdeos que n\\xE3o haviam na sequ\\xEAncia original\", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-335\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-335\",\n    \"className\": \"footnote-ref\"\n  }, \"335\")))), mdx(\"h6\", {\n    \"id\": \"mutação-do-tipo-expansão-de-repetições-de-trinucleotídeos-trincas\"\n  }, \"Muta\\xE7\\xE3o do tipo expans\\xE3o de repeti\\xE7\\xF5es de trinucleot\\xEDdeos (trincas)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Algumas partes do nosso DNA s\\xE3o mais suscet\\xEDveis a muta\\xE7\\xF5es pois repetem v\\xE1rias vezes as mesmas sequ\\xEAncias\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nesse tipo de muta\\xE7\\xE3o, aumenta o n\\xFAmero considerado normal dessas trincas na sequ\\xEAncia mutante\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210406224319.png\",\n    \"alt\": \"Pasted image 20210406224319.png\"\n  })))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"V\\xE1rias doen\\xE7as s\\xE3o causadas por essas muta\\xE7\\xF5es\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210406224435.png\",\n    \"alt\": \"Pasted image 20210406224435.png\"\n  }), mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-123187\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-123187\",\n    \"className\": \"footnote-ref\"\n  }, \"123187\")))))), mdx(\"h5\", {\n    \"id\": \"deleção\"\n  }, \"Dele\\xE7\\xE3o\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quando falta algum ou muitos nucleot\\xEDdeos na sequ\\xEAncia mutante que havia na sequ\\xEAncia original\", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-757348\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-757348\",\n    \"className\": \"footnote-ref\"\n  }, \"757348\")))), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-644606\"\n  }, \"O que \\xE9 um indel?\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-644606\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-335\"\n  }, \"O que \\xE9 um indel de inser\\xE7\\xE3o?\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-335\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-123187\"\n  }, \"O que acontece nas Muta\\xE7\\xE3o do tipo expans\\xE3o de repeti\\xE7\\xF5es de trinucleot\\xEDdeos (trincas)?\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-123187\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-757348\"\n  }, \"O que \\xE9 um indel de dele\\xE7\\xE3o?\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-757348\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"838529c6-c3d4-50dc-b32d-e58c68a8903a","fields":{"slug":"/Classificação das mutações gênicas em relação ao DNA","title":"Classificação das mutações gênicas em relação ao DNA"}}}]},"fields":{"slug":"/Substituição de nucleotídeos","title":"Substituição de nucleotídeos"}}},"pageContext":{"id":"c185d904-35f8-546a-9fc9-91153188d228"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}